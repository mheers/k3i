package cluster

import (
	"testing"

	"github.com/mheers/k3i/ignite"
	"github.com/stretchr/testify/require"
)

func TestRenameKubeconfigCluster(t *testing.T) {
	kubeconfig := `
apiVersion: v1
clusters:
  - cluster:
      server: https://10.61.0.58:6443
      certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURBRENDQWVpZ0F3SUJBZ0lVUEl4ZmFKdG85OWF1empNTWMxaXJqeG9rOUo4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF4TU5hM1ZpWlhKdVpYUmxjeTFqWVRBZUZ3MHlNakV5TWpreE1qVTJNREJhRncwegpNakV5TWpZeE1qVTJNREJhTUJneEZqQVVCZ05WQkFNVERXdDFZbVZ5Ym1WMFpYTXRZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURFNDZkU2x5SUMvdWpDVlk0OUtLcXRkemlCVlVtRkkyMEEKZTR5QXNnZ20vb2Nta1RZYzc1Y25hNXNEQTJTMGthbVV1K0IrU2orZnJaYStER2Z2VG1yQ1RzaVppVUh2aFdHcQprenJwbWlIbllCdWpvNk82dTUvMEV4d3NDVEZJL1BuS3pmMDIzb1kybkg5M3dpMlBsbUJvdEZqZUMxMXBIVUF4CkJZb3dqNzZCNmFYRWlOODJZLy9ndXp5VkR0NXZ6MC9LNXBtNEsweS8zS1QrbGQ2d0NIY0NvZTRXS09tS1dEVTAKanRSM1J2WCtDS01INGVoMUlQaTlsTkJqVmoyV2U4NldnSDk3SkVGRHZLRXlBUEJDQkJQc1JyWjBjYWg4V2o1NgplQW5PdURKUDhMQzBUVSt2VHVzbmtvcjZPalQ3T3NGaVdjRmZRUkJpalNTeVdyU29McDYvQWdNQkFBR2pRakJBCk1BNEdBMVVkRHdFQi93UUVBd0lCQmpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRUWtSTHkKVmw5c1J5MERaWGxPTDFKMkk2RkpxVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVTRuZFYwVjM4TGh6Z1BUMgpBYTltUmgzY3lheGdWSWxCQWh1NmgxVGFyVmdGVGxUK1c5QmVzMm5Nc1NDaVBKVXI5RVJLQ0RPUlN2UEN3TjJpCjNmZytuUml6MW1qYUhaNUhjR0IrYlptM1lXeU9DckE2K093eGJZc3ZrZDhyd0tPTTZEQzRySXNRU3hKdDZuZkkKUU5qRWhJamFHM0FOd0Jkakk3cDFMdG1XYXlSazg5SWprYnl3Vkh1eVFERW1IbjZud0tLR2NCeXpUQ3BrejIrKworMzNwQ2I5VXVlMis3ZmhZMEJKOXIybFljWDgyKzY0SlNwbWt5YmlVUjhyNFltdU0rV0MrdWI2QklUS1FabG9GCkErWHlMaTRCTDVGQ2l5b2RGWmFoV1pkYTIrVWg0OTVldjh6bldFY2t5OFNkSXo1ZU9xOVpqMjNsMmV5cUU2N1IKa3Zjd3p3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    name: local
contexts:
  - context:
      cluster: local
      namespace: default
      user: user
    name: Default
current-context: Default
kind: Config
preferences: {}
users:
  - name: user
    user:
      client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lVSkEyZGFyUi81SEZnR0hoN1UxenZJYnk3d2RJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF4TU5hM1ZpWlhKdVpYUmxjeTFqWVRBZUZ3MHlNakV5TWpreE1qVTJNREJhRncweQpNekV5TWpreE1qVTJNREJhTURReEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6TVJrd0Z3WURWUVFECkV4QnJkV0psY201bGRHVnpMV0ZrYldsdU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTBiYWJIc20vN3FYaW1tSXYvNk1NTlp4VWFvTHFvQ2Q1Y3Z2azJMZWJIaTJ0UjdMemsvRUk4ZnU5VHQ4SApWWVplNFhjRHdSaktJSS9wY2NKYXJEWW9mZytHVExEVGpWVmJjNTVTOHF1aGlTblhMdXVUVDRKZGdnN3FwSTMyCkFIZURsa2xkVk9WeU40NFp2SUk2bXpBR3hwdUY1U2JaRWdwaUFydkhCZUpnVjB0dm9IZk1pQVptMW5BazNrTmkKdzEvOEloaWliL3JFalpiMk1HMm5rbjByN2xkTHRvTjE3R3ByQ2FzNEI1VnZqUkpYV0ZxYXRXeENQUVdNZ3J1Zwo1cVAxNnlteHpnNXEyMHdtaERYWW1SR3hvY1dDaWF0SGFwMjdHVTJiYmFpRXo0VDRiN0drOE1PTjZ5R1Q3UUlCClhzZ2hiSlArRFB0dWFoTWFzc05qdjVsUEF3SURBUUFCbzM4d2ZUQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwTwpCQllFRkNUOXl5eXZKWWpPVmd3d0lqNDZRcDB6SnZTdE1COEdBMVVkSXdRWU1CYUFGQkNSRXZKV1gyeEhMUU5sCmVVNHZVbllqb1VtcE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTI4dThtcU5Oa2ZUOUV1N0lkOVR2ZGZzT2MKVzBZSjJNVzdKM1VEazRZVDNRZk1xc0tydENyMnp4UUQxbDBUdGsrQXo1NWVVdUY1Mi9XUkZ5bi9xR3BlU0UrVApsb0ZTMk9IVzQyVnVka29kMi9kaThKcnViL3J0YStVK1prdmZNSGQ0SU5zeGRTOC9sOWt3M3N5ZWlHUXUxRFc4CjNNNWtBUzY3NVBTcHZKN3kzZHpBeFZReTJFaU81ZHRNOXRjK3Ryb01QQ3lCZG5hQjR1Nk5sb3FlWkswcFVDMDMKdkRzSVo3LzQxOGlkaWVPaVBqV21zNUsvOURhSVVyTE5pQmc4cW84bk1tUzhwYVhmbXc3YTVabmsyTkNIZXNJTwo5MkRYY1IxWDFmZnpKa20ybE5tRHg4WVo4ZUFvLzBkMExVelJLUHE4clFXbGlRMXdXZGNmNUtvVS9va0EKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMGJhYkhzbS83cVhpbW1Jdi82TU1OWnhVYW9McW9DZDVjdnZrMkxlYkhpMnRSN0x6CmsvRUk4ZnU5VHQ4SFZZWmU0WGNEd1JqS0lJL3BjY0phckRZb2ZnK0dUTERUalZWYmM1NVM4cXVoaVNuWEx1dVQKVDRKZGdnN3FwSTMyQUhlRGxrbGRWT1Z5TjQ0WnZJSTZtekFHeHB1RjVTYlpFZ3BpQXJ2SEJlSmdWMHR2b0hmTQppQVptMW5BazNrTml3MS84SWhpaWIvckVqWmIyTUcybmtuMHI3bGRMdG9OMTdHcHJDYXM0QjVWdmpSSlhXRnFhCnRXeENQUVdNZ3J1ZzVxUDE2eW14emc1cTIwd21oRFhZbVJHeG9jV0NpYXRIYXAyN0dVMmJiYWlFejRUNGI3R2sKOE1PTjZ5R1Q3UUlCWHNnaGJKUCtEUHR1YWhNYXNzTmp2NWxQQXdJREFRQUJBb0lCQVFDYXRvblgrK1VpRGJXUQpTZEc1V2JOZk5iYTlZVm53ejA1MCtzcUk2Mk4vcnhrQUpWQTNtNElLNjdwc25uTk5zRFQ5UncwNC9xM1h1ZlB5CkhmMUF3Uys4V0gydXhHRStDblBPWjBZd2kxZy8xZU5QVlRJM1hTalpFMkllQmpFdmhQeEorbFBsbHVSZGdmTVEKdEU3Q1FIc3ZPSHRlWS91T3FLUkgrZnBKS0FvRk8yYUZobGZxd1lmaEZQNkhqV2tPUWNxYmpZSHUrNk9HcnF0NQp1K0NRMGFWRklZU0p4ZExrcmxoNkVpM2h3a21NVWNVUGJPeTlGQlp0d0xSek83VkxBTWJUV0FLMGltYnh3akNJCmsyMGx6SC8vVEM0UDRhMVJqN0E2eWRaQkM3TXkyNk9yVEhzT20wMjVnQkdHWWlUV0pwMHhjRE54N0duODRicE4KSGdiS1hRR3BBb0dCQU52bXJES2dlZWFTSVVNWDlwcWtWOWVQRGVwcUpOSUZDSllyeWc5TzRKWXlyNFoySU5wRgowMkk1K0F0S25mVVNCajB5dmtRMFJONjFIRnI0UW9kYTZLeHJ3SGN1QmxVUlRmZ1lpbTJHYmNieVkzN29oWFEzCkFZWmxFekxHODgydTlUQ3dpTHI0N20xaFJUWEY3ZmhFd0dCRXdYTWJFREgzQUxPWlQ5OVdGRDFkQW9HQkFQUWoKeXhpSkJlY29lcWxrYmpYSXlQaU5JZGx5VFgzU3JYRy9sbFJpekJBdXZWNnh2WXNVbllwNnlkZWFVbHQ4bk9TSAp4dXNKQTlUUE9KYW9IalN6QTN1cndaUVFCRXYzQmxiUTdhR3l6T09tT2ljYXhDWnVDMEFSeXZmWnc2YVpXOTlJClY4bUlEb0FNUEpTQnpUNFFlZHlYMW4rbEtSQjhJMTNOY1RBZ2ZwZmZBb0dBTWNwV0hSUjI1WDBhNk8wcEdqU3gKNnczcUViUzg1NHphTjk1c1h2RDJLeXdJMEVJNUNCTWRYTFZSYzRVT3BPblMzZEo2Z0VqeGV4ZTQ5dVFWZEQ1aQpSb0FUVVNqcnFDRkY3VEhwVGdsTkcrblFHM0Vjbm9iQjRxTktLSW9ocytXMGdMVElFTVhDZnFPeW53MVU1NHp4Cm5ocVRUclBIQS9rd2dIbnJPdDlycjhVQ2dZRUFxTVpkenRaYkNGU0poN1R3STZwc2xMY3NZV0NOaGFBeFcyTngKRDJGRlpTS0tzMzM0WkwrWnNYUDFPV0ZyOGVjUnAwTGVGdm1pZG1uUzJ3UFo3ZUNiVmRHRS8xQ2JSOUM3eHlTawpRcGFTNGdXMlNmWk5CNnduaHVGR0NWVzMxZUpMQ3U2K0VZcEhTK29wcnhpVXhJVXJXWDUyUU1QeXdYeXdEbGJLCkd0VTc3czBDZ1lCVzdYR0cySzdiV2tjQ3NlNEhFb1Q0TTA1UVlZbUNPSEtmdGJVYUg3R1A5SUpCZjZaWitDcWwKMVJIT2pXdUN0VnBCdmpDV2VrZE5Ib0YxbEdKd3pWZTZtbHBWV2xDQXJETGZtRW5NYTluMnIvSzBMUzltTmV4TAp0SnZsMW1UN1hIcjhqM0JOTmRtZFl5WUlvYkcwdVVHQTk5UXYrSFZqSURsNVoyY0JneXZSR3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
`

	cluster := &Cluster{
		Name: "my-cluster",
	}
	adjusted, err := cluster.adjustKubeconfig(kubeconfig)
	require.NoError(t, err)
	require.Contains(t, adjusted, "my-cluster")
	require.NotContains(t, adjusted, "local")

}

func TestKubeconfig(t *testing.T) {
	err := ignite.InitClient()
	require.NoError(t, err)

	kubeconfig, err := Kubeconfig("demo", false)
	require.NoError(t, err)
	require.Contains(t, kubeconfig, "demo")
}
